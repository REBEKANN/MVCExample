package com.mrjaffesclass.apcs.mvc.template;

import com.mrjaffesclass.apcs.messenger.*;

/**
 * MVC Template This is a template of an MVC framework used by APCS for the PDA
 * project
 *
 * @author Rebekah Leslie and Ann Tran
 * @version 1.4
 */
public class View extends javax.swing.JFrame implements MessageHandler {

    private final Messenger mvcMessaging;

    /**
     * Creates a new view
     *
     * @param messages mvcMessaging object
     */
    public View(Messenger messages) {
        mvcMessaging = messages;   // Save the calling controller instance
        initComponents();           // Create and init the GUI components
    }

    /**
     * Initialize the model here and subscribe to any required messages
     */
    public void init() {
        // Subscribe to messages here
        mvcMessaging.subscribe("model:changeAgeRange:view", this);
        mvcMessaging.subscribe("model:upperOfficial:view", this);
    }

    @Override
    public void messageHandler(String messageName, Object messagePayload) {
        if (messagePayload != null) {
            System.out.println("RCV (view): " + messageName + " | " + messagePayload.toString());
        } else {
            System.out.println("RCV (view): " + messageName + " | No data sent");
        }
        if (messageName.equals("model:changeAgeRange.view")) {
            firstAndLast.setText(messagePayload.toString());
        } else {
            //jLabel2.setText(messagePayload.toString());      
        }
    }

    /**
     * Instantiate an object with the field number that was clicked (1 or 2) and
     * the direction that the number should go (up or down)
     *
     * @param fieldNumber 1 or 2 for the field being modified
     * @param direction this.UP (1) or this.DOWN (-1), constants defined above
     * @return the HashMap payload to be sent with the message
     */
    private MessagePayload createPayload(int fieldNumber, int direction) {
        MessagePayload payload = new MessagePayload(fieldNumber, direction);
        return payload;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        name = new javax.swing.JPanel();
        firstLabel = new javax.swing.JLabel();
        lastLabel = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        age = new javax.swing.JPanel();
        ageLabel = new javax.swing.JLabel();
        ageNumber = new javax.swing.JTextField();
        title = new javax.swing.JLabel();
        firstAndLast = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        findAgeRange = new javax.swing.JButton();
        lowerBound = new javax.swing.JLabel();
        to = new javax.swing.JLabel();
        upperBound = new javax.swing.JLabel();
        doubleChecking = new javax.swing.JPanel();
        questionForDate = new javax.swing.JLabel();
        dateAge = new javax.swing.JTextField();
        truth = new javax.swing.JLabel();
        findPermissibleDateAge = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        name.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        firstLabel.setText("First Name:");

        lastLabel.setText("Last Name:");

        javax.swing.GroupLayout nameLayout = new javax.swing.GroupLayout(name);
        name.setLayout(nameLayout);
        nameLayout.setHorizontalGroup(
            nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstLabel)
                    .addComponent(lastLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastName)
                    .addComponent(firstName))
                .addContainerGap())
        );
        nameLayout.setVerticalGroup(
            nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstLabel)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastLabel)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        age.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        ageLabel.setText("How Old Are You? (Number of Years):");

        javax.swing.GroupLayout ageLayout = new javax.swing.GroupLayout(age);
        age.setLayout(ageLayout);
        ageLayout.setHorizontalGroup(
            ageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ageNumber)
                .addContainerGap())
        );
        ageLayout.setVerticalGroup(
            ageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLabel)
                    .addComponent(ageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        title.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("PERMISSIBLE DATING AGE");

        firstAndLast.setEditable(false);
        firstAndLast.setText(" ");
        firstAndLast.setBorder(null);

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        findAgeRange.setText("Click Here To Find Your Age Range :)");
        findAgeRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAgeRangeActionPerformed(evt);
            }
        });

        lowerBound.setText("          ");

        to.setText("          ");

        upperBound.setText("          ");

        doubleChecking.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Just To Make Sure...", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        questionForDate.setText("What is the age of your possible date?");

        dateAge.setText(" ");

        truth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        truth.setText(" ");

        findPermissibleDateAge.setText("Click Here To Double Check If Your Date's Age is Permissible :)");
        findPermissibleDateAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPermissibleDateAgeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doubleCheckingLayout = new javax.swing.GroupLayout(doubleChecking);
        doubleChecking.setLayout(doubleCheckingLayout);
        doubleCheckingLayout.setHorizontalGroup(
            doubleCheckingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doubleCheckingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(doubleCheckingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(truth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(doubleCheckingLayout.createSequentialGroup()
                        .addComponent(questionForDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateAge))
                    .addComponent(findPermissibleDateAge, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
                .addContainerGap())
        );
        doubleCheckingLayout.setVerticalGroup(
            doubleCheckingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doubleCheckingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(doubleCheckingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionForDate)
                    .addComponent(dateAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(truth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findPermissibleDateAge)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstAndLast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lowerBound)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(to)
                                .addGap(8, 8, 8)
                                .addComponent(upperBound))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(resetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitButton))
                            .addComponent(doubleChecking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(findAgeRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(age, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstAndLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowerBound)
                    .addComponent(to)
                    .addComponent(upperBound))
                .addGap(13, 13, 13)
                .addComponent(findAgeRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17)
                .addComponent(doubleChecking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(resetButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    /**
     * Instantiated the exit button so the program would close when the event
     * happened
     *
     * @param evt the event where a button was pressed having the program run
     */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        System.exit(0);
    }                                          

    /**
     * Instantiated the button that will reset all of the boxes used in the
     * program
     *
     * @param evt the event when a button is pressed that will run the program
     */
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        firstName.setText(" ");
        lastName.setText(" ");
        ageNumber.setText(" ");
        firstAndLast.setText(" ");
        lowerBound.setText(" ");
        upperBound.setText(" ");
        to.setText(" ");
        dateAge.setText(" ");
        truth.setText(" ");
    }                                           

    /**
     * Instantiate the findAgeRange button. It gets the age and plugs it into
     * the required equations in order to find the upper and lower bounds of the
     * age, also validating the input that the user puts into the program.
     *
     * @param evt how the program is started when a button is clicked to set the
     * code in this function into action
     */
    private void findAgeRangeActionPerformed(java.awt.event.ActionEvent evt) {                                             
        float ageAmount, lower, diff, upper;
        String fullName, statement;
        try {
            ageAmount = Float.parseFloat(ageNumber.getText());
            lower = ageAmount / 2 + 7;
            diff = ageAmount - lower;
            upper = ageAmount + diff;
            lowerBound.setText(String.valueOf(lower));
            upperBound.setText(String.valueOf(upper));
            to.setText(" to ");
            fullName = firstName.getText() + " " + lastName.getText();
            statement = fullName + ", your dating age range is:";
            if (ageAmount > 14) {
                firstAndLast.setText(statement);
            } else {
                firstAndLast.setText("You don't get a range! You're too young to date! Wait until you're older!");
                lowerBound.setText(" ");
                upperBound.setText(" ");
                to.setText(" ");
            }
        } catch (NumberFormatException e) {
            firstAndLast.setText("Please enter an integer!");
            lowerBound.setText(" ");
            upperBound.setText(" ");
            to.setText(" ");
        }
    }                                            

    /**
     * Instantiate the findPermissibleDateAge button. It gets the lower and
     * upper bounds for the age and compares those to the age of the date
     * inputted by the user. It also validates the input that the user puts into
     * the program.
     *
     * @param evt how the program is started when a button is clicked to set the
     * code in this function into action
     */
    private void findPermissibleDateAgeActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        try {
            float dateAgeAmount, ageAmount, lower, diff, upper;
            ageAmount = Float.parseFloat(ageNumber.getText());
            lower = ageAmount / 2 + 7;
            diff = ageAmount - lower;
            upper = ageAmount + diff;
            dateAgeAmount = Float.parseFloat(dateAge.getText());
            if (dateAgeAmount > 14) {
                if ((dateAgeAmount <= upper) && (dateAgeAmount >= lower)) {
                    truth.setText("Your date is in your range! Take your date somewhere nice! <3");
                } else {
                    truth.setText("I'm so sorry. Your date is out of range. :(");
                }
            } else {
                truth.setText("Your date is too young!!!! Please wait until your date is older!");
            }
        } catch (NumberFormatException e) {
            truth.setText("Please enter an integer!");
        }
    }                                                      

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify                     
    private javax.swing.JPanel age;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageNumber;
    private javax.swing.JTextField dateAge;
    private javax.swing.JPanel doubleChecking;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton findAgeRange;
    private javax.swing.JButton findPermissibleDateAge;
    private javax.swing.JTextField firstAndLast;
    private javax.swing.JLabel firstLabel;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel lastLabel;
    private javax.swing.JTextField lastName;
    private javax.swing.JLabel lowerBound;
    private javax.swing.JPanel name;
    private javax.swing.JLabel questionForDate;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel title;
    private javax.swing.JLabel to;
    private javax.swing.JLabel truth;
    private javax.swing.JLabel upperBound;
    // End of variables declaration                   
}
